(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{478:function(t,a,s){"use strict";s.r(a);var r=s(35),e=Object(r.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"编程思想"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编程思想"}},[t._v("#")]),t._v(" 编程思想")]),t._v(" "),s("p",[t._v("算是对经典设计模式的补充，实践过程中还是需要自主思考，没有特定的指导原则。")]),t._v(" "),s("h3",{attrs:{id:"接口耦合"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#接口耦合"}},[t._v("#")]),t._v(" 接口耦合")]),t._v(" "),s("p",[t._v("逻辑需要耦合才能运行，接口和实现总是要选一种，尽量选择接口，可能还需要依赖注入配合。")]),t._v(" "),s("h3",{attrs:{id:"有限状态机"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#有限状态机"}},[t._v("#")]),t._v(" 有限状态机")]),t._v(" "),s("p",[t._v("状态机规定了整套逻辑可能出现的状态以及各种状态之间可能的路径，是一个有向图，TCP协议实现中就大量应用了状态机。")]),t._v(" "),s("p",[t._v("当需要太多条件判断的时候使用状态机是个不错的选择，比如解析"),s("code",[t._v("json")]),t._v("格式的场景。")]),t._v(" "),s("h3",{attrs:{id:"函数式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#函数式"}},[t._v("#")]),t._v(" 函数式")]),t._v(" "),s("p",[t._v("本质是数据与逻辑分离，对付逻辑复杂代码冗长的函数很有效。")]),t._v(" "),s("h3",{attrs:{id:"实体组件系统-ecs"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实体组件系统-ecs"}},[t._v("#")]),t._v(" 实体组件系统（ECS）")]),t._v(" "),s("p",[t._v("有些场景下OOP可能不是最好的选择，造成代码比较丑陋，也不能有效利用程序局部性原理。")])])}),[],!1,null,null,null);a.default=e.exports}}]);