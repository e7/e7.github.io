(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{465:function(t,s,a){"use strict";a.r(s);var n=a(35),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[t._v("#")]),t._v(" Tips")]),t._v(" "),a("PostTags",{attrs:{tags:t.$page.frontmatter.tags}}),t._v(" "),a("ul",[a("li",[a("p",[t._v("交叉编译")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOOS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("windows "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("GOARCH")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("amd64 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CGO_ENABLED")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CC")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x86_64-w64-mingw32-gcc"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("CGO_CFLAGS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-DSQLITE_ENABLE_DBSTAT_VTAB -DSQLITE_DEFAULT_PAGE_SIZE=512"')]),t._v(" go build -o demo.exe -ldflags "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-w -s'")]),t._v(" cmd/main.go\n")])])])]),t._v(" "),a("li",[a("p",[t._v("环境变量")]),t._v(" "),a("ul",[a("li",[t._v("GOTRACEBACK，控制panic时的行为\n"),a("ol",[a("li",[t._v("none，不输出调用栈")]),t._v(" "),a("li",[t._v("single（默认值），输出导致异常的协程调用栈")]),t._v(" "),a("li",[t._v("all，输出用户创建的所有协程调用栈")]),t._v(" "),a("li",[t._v("system，类似all，但还包括GO框架底层实现创建的协程")]),t._v(" "),a("li",[t._v("crash，输出所有的协程调用栈，"),a("strong",[t._v("并生成core")])])])])])]),t._v(" "),a("li",[a("p",[t._v("逃逸分析")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("原则1：指向栈上对象的指针不能被存储到堆中")])]),t._v(" "),a("li",[a("p",[t._v("原则2：指向栈上对象的指针不能超过该栈对象的生命周期（即如果超过，则将该栈对象分配到堆中）")])]),t._v(" "),a("li",[a("p",[t._v("输出逃逸分析信息，编译时加入"),a("code",[t._v("-m=2")])]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("go tool compile -m"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" test.go\n")])])])])])]),t._v(" "),a("li",[a("p",[t._v("终端下执行单元测试")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单个函数")]),t._v("\ngo "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" -run Test_Func1 -v Awesome"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(",_test"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(".go\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 执行所有")]),t._v("\ngo "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("test")]),t._v(" ./pkg/"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n")])])])]),t._v(" "),a("li",[a("p",[t._v("验证某个struct是否实现了某个接口，没（完全）实现就会编译报错")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 匿名变量，未实现则赋值会报错")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" Render "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("JSON"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("return不是原子的，先将返回值保存到栈上，然后执行defer，再返回")])]),t._v(" "),a("li",[a("p",[t._v("切片拆分")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// SplitSlice 切片拆分")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" SplitSlice"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("T any"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataList "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" perBatch "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("T "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tnBatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("len")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" perBatch "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" perBatch\n\tidsList "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("T"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" nBatch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" nBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tidsList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" dataList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("perBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" perBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("append")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("idsList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" dataList"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("perBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("nBatch"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("runtime.MemStats")]),t._v(" "),a("blockquote",[a("p",[t._v("Alloc: 已分配的堆对象内存大小，即已分配但未使用的内存大小。\nTotalAlloc: 已分配的总内存大小，包括已释放的内存。\nSys: 运行时系统从操作系统申请的内存大小。\nLookups: 已进行的指针查找次数。\nMallocs: 分配的堆对象数量。\nFrees: 释放的堆对象数量。\nHeapAlloc: 当前堆内存的使用量。\nHeapSys: 已经向操作系统申请的堆内存大小。\nHeapIdle: 未被使用的堆内存大小。\nHeapInuse: 已被使用的堆内存大小。\nHeapReleased: 从操作系统归还的堆内存大小。\nHeapObjects: 当前堆中对象的数量。\nStackInuse: 当前栈内存的使用量。\nStackSys: 运行时系统从操作系统申请的栈内存大小。\nMSpanInuse: 当前 mspan 结构体（管理一段内存区域的结构体）的使用量。\nMSpanSys: 运行时系统从操作系统申请的 mspan 结构体的大小。\nMCacheInuse: 当前 mcache 结构体（线程缓存，用于存储本地对象）的使用量。\nMCacheSys: 运行时系统从操作系统申请的 mcache 结构体的大小。\nBuckHashSys: 分配和管理 buckhash 的堆内存大小。\nGCSys: 垃圾回收元数据的内存大小。\nOtherSys: 其他运行时系统使用的内存大小。")])])]),t._v(" "),a("li",[a("p",[t._v("常用开源库")]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("展开")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 微服务框架")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("go"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("kratos"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("kratos\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// cockroachdb的error包")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cockroachdb"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("errors\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// web服务框架")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("labstack"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("echo\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 高性能网络框架，对标java的netty，c/c++的libevent、libev或者boost.asio")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("panjf2000"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("gnet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 协程池")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("https")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("github"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("com"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("panjf2000"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("ants\n")])])])])]),t._v(" "),a("li",[a("p",[t._v("避坑")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("闭包陷阱")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" d "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("range")]),t._v(" data "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// d虽然是int类型（值为data元素的一份拷贝），但因为调用后又继续赋值（即使只循环一次也是），")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 所以闭包会以【引用】捕获变量d，goroutine执行时可能已经循环完毕，所以总是输出最后一个元素")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("go")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    fmt"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("d"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[a("code",[t._v("SetDeadline")]),t._v("和"),a("code",[t._v("SetXxxDeadline")]),t._v("是设置的未来的某个时刻，所以每次读写之前需要重新设置")])]),t._v(" "),a("li",[a("p",[t._v("json解析尽量加注解，防止匿名嵌套定义时无法解析出正确的值")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Test "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Value "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        X "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"x"`')]),t._v("\n        Y "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"y"`')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"value"`')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);