(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{481:function(t,e,n){"use strict";n.r(e);var s=n(35),a=Object(s.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"grpc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#grpc"}},[t._v("#")]),t._v(" gRPC")]),t._v(" "),n("h3",{attrs:{id:"错误码"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#错误码"}},[t._v("#")]),t._v(" "),n("a",{attrs:{href:"https://grpc.github.io/grpc/core/md_doc_statuscodes.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("错误码"),n("OutboundLink")],1)]),t._v(" "),n("p",[t._v("grpc的错误码定义得比较详尽了，不够还有details，实在不行还可以扩展（只是不能使用UnmarshalJSON了），所以接受其它的库或者rpc的error")]),t._v(" "),n("p",[t._v("时就可以先转成统一的grpc错误码方便逻辑层处理。当然全部自定义一套也是可以的，重要是内部逻辑用"),n("strong",[t._v("统一")]),t._v("的一套。")]),t._v(" "),n("h3",{attrs:{id:"长连接控制keepalive"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#长连接控制keepalive"}},[t._v("#")]),t._v(" 长连接控制keepalive")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("服务端")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("主动断开策略")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// EnforcementPolicy is used to set keepalive enforcement policy on the")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// server-side. Server will close connection with a client that violates this")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// policy.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" EnforcementPolicy "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MinTime is the minimum amount of time a client should wait before sending")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a keepalive ping.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果客户端连续ping的间隔小于此值，则断开连接")]),t._v("\n\tMinTime time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is 5 minutes.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If true, server allows keepalive pings even when there are no active")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// streams(RPCs). If false, and client sends ping when there are no active")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// streams, server will send GOAWAY and close the connection.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有活动stream的时候是否允许ping")]),t._v("\n\tPermitWithoutStream "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false by default.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),n("li",[n("p",[t._v("控制参数")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ServerParameters is used to set keepalive and max-age parameters on the")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// server-side.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" ServerParameters "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MaxConnectionIdle is a duration for the amount of time after which an")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// idle connection would be closed by sending a GoAway. Idleness duration is")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// defined since the most recent time the number of outstanding RPCs became")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// zero or the connection establishment.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接最大空闲时间，超时则断开")]),t._v("\n\tMaxConnectionIdle time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is infinity.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MaxConnectionAge is a duration for the maximum amount of time a")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// connection may exist before it will be closed by sending a GoAway. A")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// random jitter of +/-10% will be added to MaxConnectionAge to spread out")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// connection storms.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 连接生命周期，上下浮动10%")]),t._v("\n\tMaxConnectionAge time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is infinity.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// MaxConnectionAgeGrace is an additive period after MaxConnectionAge after")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// which the connection will be forcibly closed.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 关闭连接之前等待的时间，以便完成pending的rpc请求")]),t._v("\n\tMaxConnectionAgeGrace time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is infinity.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// After a duration of this time if the server doesn't see any activity it")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pings the client to see if the transport is still alive.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If set below 1s, a minimum value of 1s will be used instead.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 心跳检测周期，即客户端空闲未发任何数据服务端去ping一下")]),t._v("\n\tTime time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is 2 hours.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// After having pinged for keepalive check, the server waits for a duration")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// of Timeout and if no activity is seen even after that the connection is")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// closed.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 服务端ping客户端允许的响应延迟时间，超时则断开")]),t._v("\n\tTimeout time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is 20 seconds.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("客户端")]),t._v(" "),n("ul",[n("li",[n("p",[t._v("控制参数")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ClientParameters is used to set keepalive parameters on the client-side.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// These configure how the client will actively probe to notice when a")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// connection is broken and send pings so intermediaries will be aware of the")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// liveness of the connection. Make sure these parameters are set in")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// coordination with the keepalive policy on the server, as incompatible")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// settings can result in closing of connection.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" ClientParameters "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// After a duration of this time if the client doesn't see any activity it")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// pings the server to see if the transport is still alive.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If set below 10s, a minimum value of 10s will be used instead.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 心跳检测周期，ping服务端，最低只能10秒")]),t._v("\n\tTime time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is infinity.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// After having pinged for keepalive check, the client waits for a duration")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// of Timeout and if no activity is seen even after that the connection is")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// closed.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 客户端ping服务端允许的响应延迟时间，超时断开")]),t._v("\n\tTimeout time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Duration "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// The current default value is 20 seconds.")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If true, client sends keepalive pings even with no active RPCs. If false,")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// when there are no active RPCs, Time and Timeout will be ignored and no")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// keepalive pings will be sent.")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 没有活动stream的时候是否允许ping")]),t._v("\n\tPermitWithoutStream "),n("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("bool")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false by default.")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])])]),t._v(" "),n("li",[n("p",[t._v("示例")]),t._v(" "),n("div",{staticClass:"language-go extra-class"},[n("pre",{pre:!0,attrs:{class:"language-go"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google.golang.org/grpc"')]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"google.golang.org/grpc/keepalive"')]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" kaep "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keepalive"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("EnforcementPolicy"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tMinTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("             "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If a client pings more than once every 5 seconds, terminate the connection")]),t._v("\n\tPermitWithoutStream"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("            "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allow pings even when there are no active streams")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" kasp "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" keepalive"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ServerParameters"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tMaxConnectionIdle"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("     "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("15")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If a client is idle for 15 seconds, send a GOAWAY")]),t._v("\n\tMaxConnectionAge"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("      "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// If any connection is alive for more than 30 seconds, send a GOAWAY")]),t._v("\n\tMaxConnectionAgeGrace"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Allow 5 seconds for pending RPCs to complete before forcibly closing connections")]),t._v("\n\tTime"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("                  "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Ping the client if it is idle for 5 seconds to ensure the connection is still active")]),t._v("\n\tTimeout"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("               "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" time"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Second"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Wait 1 second for the ping ack before assuming the connection is dead")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ngrpc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewServer")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grpc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("KeepaliveEnforcementPolicy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kaep"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" grpc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("KeepaliveParams")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("kasp"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])]),t._v(" "),n("h3",{attrs:{id:"避坑"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#避坑"}},[t._v("#")]),t._v(" 避坑")]),t._v(" "),n("ul",[n("li",[t._v("调接口context被cancel，已知的两种原因：\n"),n("ol",[n("li",[t._v("客户端设置的超时时间过短，比如微秒级，只要是跨机器的rpc至少都是毫秒级。")]),t._v(" "),n("li",[t._v("服务端为了异步执行将context转给了其它协程（线程），客户端收到响应后执行了cancel。")])])])])])}),[],!1,null,null,null);e.default=a.exports}}]);