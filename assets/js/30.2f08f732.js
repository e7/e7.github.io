(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{469:function(t,e,a){"use strict";a.r(e);var l=a(35),n=Object(l.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"oom是如何工作的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#oom是如何工作的"}},[t._v("#")]),t._v(" OOM是如何工作的")]),t._v(" "),a("ol",[a("li",[t._v("由于在 Linux 系统中，进程申请的都是虚拟内存地址。所以当程序调用 malloc() 申请内存时，如果虚拟内存空间足够的话，是不会触发 OOM 机制的。")]),t._v(" "),a("li",[t._v("当进程访问虚拟内存地址时，如果此虚拟内存地址还没有映射到物理内存地址的话，那么将会触发 缺页异常。\n在缺页异常处理例程中，将会申请新的物理内存页，并且将进程的虚拟内存地址映射到刚申请的物理内存。")]),t._v(" "),a("li",[t._v("如果在申请物理内存时，系统中的物理内存不足，那么内核将会回收一些能够被回收的文件页缓存（就是free命令看到的buff/cache）。")]),t._v(" "),a("li",[t._v("如果回收完后，物理内存还是不足的话，那么将会触发 swapping机制（如果开启了的话）。\nswapping机制 会将某些进程不常用的内存页写入到交换区（硬盘分区或文件）中，然后释放掉这些内存页，从而达到缓解内存不足的情况。")]),t._v(" "),a("li",[t._v("如果通过上面的手段还不能解决内存不足的情况，那么内核将会调用 pagefault_out_of_memory() 函数来杀掉系统中占用物理内存最多的进程。")])])])}),[],!1,null,null,null);e.default=n.exports}}]);