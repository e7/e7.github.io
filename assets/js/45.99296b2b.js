(window.webpackJsonp=window.webpackJsonp||[]).push([[45],{483:function(s,t,a){"use strict";a.r(t);var e=a(35),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-k8s-minikube-k3s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-k8s-minikube-k3s"}},[s._v("#")]),s._v(" Docker & K8S & Minikube & K3S")]),s._v(" "),a("PostTags",{attrs:{tags:s.$page.frontmatter.tags}}),s._v(" "),a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#docker"}},[s._v("Docker")])]),a("li",[a("a",{attrs:{href:"#k8s"}},[s._v("K8S")])]),a("li",[a("a",{attrs:{href:"#minikube"}},[s._v("Minikube")]),a("ul",[a("li",[a("a",{attrs:{href:"#安装-linux环境"}},[s._v("安装（Linux环境）")])])])]),a("li",[a("a",{attrs:{href:"#k3s"}},[s._v("K3S")])])])]),a("p"),s._v(" "),a("h2",{attrs:{id:"docker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker"}},[s._v("#")]),s._v(" Docker")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("docker使用CGroups（control groups）实现资源的配额管理，可限制CPU、内存、网络等。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("利用cgroup限制cpu示例")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /sys/fs/cgroup/cpu\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" my_limit "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建后系统会自动在该目录创建一堆文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /sys/fs/cgroup/cpu/my_limit/cpu.cfs_quota_us "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最多能使用20%的时间片")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12345")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /sys/fs/cgroup/cpu/my_limit/tasks "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 被限制的进程列表，一行一个")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker版")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d --cpu"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('".5"')]),s._v(" nginx "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制cpu为50%")]),s._v("\n\n")])])])]),s._v(" "),a("li",[a("p",[s._v("镜像存储")]),s._v(" "),a("ul",[a("li",[s._v("基于checksum的去重存储，比如底层的使用同一版本的操作系统，则只会存储一份，不像虚拟机有多份系统。")])])])])])]),s._v(" "),a("h2",{attrs:{id:"k8s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k8s"}},[s._v("#")]),s._v(" K8S")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("优点：")]),s._v(" "),a("ul",[a("li",[s._v("按需水平和垂直扩容")]),s._v(" "),a("li",[s._v("自动副本控制")]),s._v(" "),a("li",[s._v("服务发现和路由")]),s._v(" "),a("li",[s._v("自动部署和回滚")])])]),s._v(" "),a("li",[a("p",[s._v("组件")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("master")]),s._v(" "),a("ul",[a("li",[s._v("kube-api-server：负责提供k8s的api服务，非常关键，worker节点与master节点通信的桥梁")]),s._v(" "),a("li",[s._v("etcd：kv数据库，配置信息等的存储，保存k8s集群信息")]),s._v(" "),a("li",[s._v("kube-scheduler：监视那些新创建的未指定运行节点的pod，并依据一定的调度策略选择节点让pod在其上运行")]),s._v(" "),a("li",[s._v("kube-controller-manager：一堆控制器的聚合体，为了降低复杂度各种控制器被编译到了一起\n"),a("ul",[a("li",[s._v("节点控制器：负责节点在出现故障时通知和响应")]),s._v(" "),a("li",[s._v("副本控制器：负责为系统中的每个副本控制器对象维护正确数量的pod")]),s._v(" "),a("li",[s._v("终端控制器：负责填充终端对象（Endpoints），即加入service和pod")]),s._v(" "),a("li",[s._v("服务账户和令牌控制器：为新的命名空间创建默认账户和API访问令牌")])])])])]),s._v(" "),a("li",[a("p",[s._v("slave")]),s._v(" "),a("ul",[a("li",[s._v("kubelet：类似一个agent，处理来着master的请求")]),s._v(" "),a("li",[s._v("kube-proxy：集群中每个节点的网络代理，是实现service概念的组成部分，维护了节点上的网络规则（iptables）")]),s._v(" "),a("li",[s._v("container-runtime：负责运行容器的软件，支持docker、containerd、cri-o、rktlet及任何Kubernetes CRI的实现")])])]),s._v(" "),a("li",[a("p",[s._v("插件")]),s._v(" "),a("ul",[a("li",[s._v("DNS：虽然是插件，但基本上是必需的")]),s._v(" "),a("li",[s._v("Web界面（dashboard）：仪表盘，可以集中管理集群中的应用程序，也用于集群本身故障的排查")]),s._v(" "),a("li",[s._v("资源监控（metric-server）：将关于容器的一些常见的时间序列度量值保存在一个集中的数据库中，并提供用于浏览这些数据的界面")]),s._v(" "),a("li",[s._v("集群层面日志：负责将容器的日志数据保存到一个集中的日志存储中，该存储能提供搜索和浏览接口")])])])])]),s._v(" "),a("li",[a("p",[s._v("国内部署 https://github.com/mingcheng/deploy-k8s-within-aliyun-mirror")])])]),s._v(" "),a("h2",{attrs:{id:"minikube"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#minikube"}},[s._v("#")]),s._v(" Minikube")]),s._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("为何需要？")]),s._v(" "),a("p",[s._v("搭建k8s集群需要比较多的资源，步骤也相对繁琐，而minikube在保证兼容的基础上简化搭建步骤，可单机部署且占用资源低，适合开发环境")])]),s._v(" "),a("h3",{attrs:{id:"安装-linux环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装-linux环境"}},[s._v("#")]),s._v(" 安装（Linux环境）")]),s._v(" "),a("ol",[a("li",[s._v("下载安装kubectl"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -LO "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"https://dl.k8s.io"')]),s._v("/release/"),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L -s https://dl.k8s.io/release/stable.txt"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("/bin/linux/amd64/kubectl\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -o root -g root -m 0755 kubectl /usr/local/bin/kubectl\n")])])])]),s._v(" "),a("li",[s._v("下载安装minikube"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 假定你已经安装好了docker")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装过程中需要访问gcr.io等境外域名，请确保你的网络通畅，或者使用国内镜像地址")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" minikube-linux-amd64 /usr/local/bin/minikube\nminikube start\n")])])])]),s._v(" "),a("li",[s._v("启动dashboard"),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("minikube dashboard\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动后会尝试打开浏览器")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 因为监听地址在127.0.0.1，如果需要远程访问还需要启动代理，之后将url中的ip端口改为代理的即可")]),s._v("\nkubectl proxy --address"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'0.0.0.0'")]),s._v(" --disable-filter"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("true\n")])])])])]),s._v(" "),a("h2",{attrs:{id:"k3s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k3s"}},[s._v("#")]),s._v(" K3S")]),s._v(" "),a("p",[s._v("todo")])],1)}),[],!1,null,null,null);t.default=r.exports}}]);